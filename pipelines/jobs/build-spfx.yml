parameters:
  - name: include_tests
    type: boolean
    default: true

jobs:
  - job: build
    pool:
      vmImage: 'ubuntu-latest'
      demands:
      - npm
      - node.js
    variables:
      npm_config_cache: $(Pipeline.Workspace)/.npm

    steps:
      - checkout: self

      - task: gittools.usegitversion.gitversion-task.UseGitVersion@5
        displayName: 'GitVersion'
        inputs:
          versionSpec: '5.6.x'

      - task: NodeTool@0
        displayName: 'Use Node 14.x'
        inputs:
          versionSpec: 14.x
          checkLatest: true

      - task: CacheBeta@1
        inputs:
          key: npm | $(Agent.OS) | package-lock.json
          path: $(npm_config_cache)
          cacheHitVar: CACHE_RESTORED
      
      - script: npm ci
        displayName: 'npm ci'

      - task: Gulp@0
        displayName: 'Bundle project'
        inputs:
          targets: bundle
          arguments: '--ship'

      - ${{ if eq(parameters.include_tests, true) }}:
        - script: npm test
          displayName: 'npm test'

        - task: PublishTestResults@2
          displayName: Publish test results
          inputs:
            testResultsFormat: JUnit
            testResultsFiles: '**/junit.xml'

        - task: PublishCodeCoverageResults@1
          displayName: 'Publish code coverage results'
          inputs:
            codeCoverageTool: Cobertura
            summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'

      - task: Gulp@0
        displayName: 'Package Solution'
        inputs:
          targets: 'package-solution'
          arguments: '--ship'

      - task: CopyFiles@2
        displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
        inputs:
          Contents: |
            sharepoint/**/*.sppkg
          TargetFolder: '$(Build.ArtifactStagingDirectory)'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: drop'